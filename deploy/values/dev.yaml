namespace: keepstack

image:
  registry: ghcr.io/Paintersrp
  tag: "sha-edb3ad4"
  pullPolicy: IfNotPresent
  pullSecrets: []

secrets:
  create: true
  name: keepstack-secrets
  data:
    DATABASE_URL: "postgres://keepstack:keepstack@{{ include \"keepstack.fullname\" . }}-postgres:5432/keepstack?sslmode=disable"
    NATS_URL: "nats://{{ include \"keepstack.fullname\" . }}-nats:4222"
    JWT_SECRET: "devdevdevdevdevdevdevdevdevdevdevdev"
    SMTP_URL: "smtp://keepstack:changeme@smtp.keepstack.local:587"
    DIGEST_SENDER: "Keepstack Digest <digest@keepstack.local>"
    DIGEST_RECIPIENT: "reader@keepstack.local"
    DIGEST_LIMIT: "10"

migrate:
  backoffLimit: 5 # default: 5 retries before the job is marked failed
  waitForDatabase:
    enabled: true # default: true; disable to skip waiting for Postgres readiness
    pollIntervalSeconds: 2 # default: 2; seconds between pg_isready checks
    timeoutSeconds: 0 # default: 0; wait indefinitely (set >0 to fail after timeout)

api:
  replicas: 2
  autoscaling:
    minReplicas: 2
    maxReplicas: 6
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1
      memory: 512Mi

worker:
  replicas: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 4
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi

web:
  replicas: 1

digest:
  enabled: true
  schedule: "0 9 * * *"
  limit: 10
  sender: "Keepstack Digest <digest@keepstack.local>"
  recipient: "reader@keepstack.local"

backup:
  enabled: true
  schedule: "0 3 * * *"
  retention: 7
  storage:
    kind: emptyDir

resurfacer:
  enabled: true
  schedule: "30 2 * * *"
  limit: 20

postgres:
  storage: 5Gi
  username: keepstack
  password: keepstack

nats:
  replicas: 1

chrome:
  enabled: true
  replicas: 1

ingress:
  enabled: true
  className: nginx
  host: keepstack.localtest.me
  tls: false

tls:
  enabled: false
  issuer: selfsigned

observability:
  enabled: true
  prometheusRelease: kube-prom-stack
  grafana:
    adminUser: admin
    adminPassword: admin
    namespace: monitoring
    serviceAccount: kube-prometheus-stack-grafana
  alerts:
    apiErrorRate:
      enabled: true
      window: 5m
      threshold: 0.05
      for: 5m
      severity: warning
    apiLatency:
      enabled: true
      window: 5m
      thresholdSeconds: 1.5
      for: 10m
      severity: warning
    workerFailures:
      enabled: true
      window: 5m
      threshold: 1
      for: 10m
      severity: warning
